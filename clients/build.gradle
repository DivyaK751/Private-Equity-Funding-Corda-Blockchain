apply plugin: 'org.springframework.boot'
//apply plugin: 'io.spring.dependency-management'

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

dependencies {
    // Corda dependencies.
    compile "$corda_release_group:corda-rpc:$corda_release_version"

    // CorDapp dependencies.
    compile project(":contracts")
    compile project(":workflows")
    compile("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    runtimeOnly 'com.mysql:mysql-connector-j'
//    runtimeOnly 'mysql:mysql-connector-java:5.1.23'

    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    compile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"

//    Token SDK Dependency
    compile "$tokens_release_group:tokens-contracts:$tokens_release_version"
    compile "$tokens_release_group:tokens-workflows:$tokens_release_version"
}

springBoot {
    mainClassName = "com.template.webserver.Server"
}

/* The Client is the communication channel between the external and the node. This task will help you immediately
 * execute your rpc methods in the main method of the client.kt. You can somewhat see this as a quick test of making
 * RPC calls to your nodes.
 */
task runTemplateClient(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.Client'
    args 'localhost:10006', 'user1', 'test'
}

/* This task will start the springboot server that connects to your node (via RPC connection). All of the http requests
 * are in the Controller file. You can leave the Server.kt and NodeRPCConnection.kt file untouched for your use.
 */
task runCompanyServer(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.webserver.Starter'
    args '--server.port=52232', '--config.rpc.host=localhost', '--config.rpc.port=10006', '--config.rpc.username=user1', '--config.rpc.password=test'
}

task runShareHolderServer(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.webserver.Starter'
    args '--server.port=50002', '--config.rpc.host=localhost', '--config.rpc.port=10009', '--config.rpc.username=user1', '--config.rpc.password=test'
}

task runBankServer(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.webserver.Starter'
    args '--server.port=50103', '--config.rpc.host=localhost', '--config.rpc.port=10012', '--config.rpc.username=user1', '--config.rpc.password=test'
}

task runObserverServer(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.webserver.Starter'
    args '--server.port=50105', '--config.rpc.host=localhost', '--config.rpc.port=10015', '--config.rpc.username=user1', '--config.rpc.password=test'
}

task runCompanyServer2(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.webserver.Starter'
    args '--server.port=51555', '--config.rpc.host=localhost', '--config.rpc.port=10018', '--config.rpc.username=user1', '--config.rpc.password=test'
}

task runShareHolderServer2(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.webserver.Starter'
    args '--server.port=53333', '--config.rpc.host=localhost', '--config.rpc.port=10021', '--config.rpc.username=user1', '--config.rpc.password=test'
}

task runShareHolderServer3(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.webserver.Starter'
    args '--server.port=50004', '--config.rpc.host=localhost', '--config.rpc.port=10024', '--config.rpc.username=user1', '--config.rpc.password=test'
}
